기본 연산자
항 - 연산에 사용되는 값
단항(num++), 이항(num1 + num2), 삼항(삼항 조건 연산자) (조건식)?참일 때:거짓일 때

1) 대입 연산자
( = )
int num = 10; 대입(복사, 저장, 연산의 최종 결과를 대입)
 - 가장 나중에 연산이 된다(연산자의 우선순위가 가장 낮다)
 
int result = 10 + 20  * 10 - 20;

2) 부호 연산자
	(+, -)
	( - ) -> 부호가 변경(음수 -> 양수, 양수 -> 음수)
	
3) 산술 연산자
( +, -, /, *, %)
% - 나눈 나머지
홀수 짝수 -> 숫자 % 2 -- 나머지가 1이면 -> 홀수, 아니면 짝수

산술 연산의 우선순위(수학의 연산 우선순위와 동일)
+ - / * %

10 + 20 * 3;

totalScore / 2.0 -> double

4) 증감 연산자
단항 연산자 <-- 이항연산자 보다 우선순위가 높다.
++num;
num++;

--num;
num--;

int num = 1;
int num2 = ++num; -> num + 1 -> num2 = num
int num2 = num++; -> num2 = num --> num+1

5) 관계 연산자 (비교 연산자)
>, >=, <, <=, ==, != ....

반환값 논리값(true, false)
조건문, 반복문에서 많이 쓰인다.

6) 논리 연산자
OR - 논리합 - ||
AND - 논리곱 - &&
NOT - 부정 - !

우선순위
논리연산자 < 관계(비교) 연산자
우선순위가 관계 연산자보다 낮으므로 관계 연산자를 여러개 연결해서 주로 사용한다.
num > 10 && num < 100

부정 - !
true -> false
false -> true

참조) 자바스크립트에서 논리 연산자의 반환값
	(논리값 X - 조건에 해당되는 값)
	const num = num || 10; // 기본값
	
	자바 -> 논리값(true, false)
	
동일한 점
boolean result = true 조건 || false 조건;	

7) 복합 대입 연산자
(대입, 산술 복합적으로 연결되어)
+=
-=

int num = num + 1; // num +=1; // ++num;
int num = num * 2; // num *=2;

num1 = num1 + 5; // num1 += 5;
num1 = num1 * num2; // num1 *= num2;

8) 조건 연산자(삼항 연산자, 삼항 조건 연산자)
(조건식)?참일 때:거짓일 때;

우선순위
가장 높은 우선순위 ( )
관계(비교 연산자)
논리 연산자 ( num > 10 && num < 100)
가장 낮은 우선순위 =

비트 연산자
- 비트 단위로 연산이 이루어지는 연산자
- 2진수 연산

& (AND) - 두개의 비트값이 모두 1인 경우에만 연산의 결과가 1이 되는 연산

| (OR) - 비트값이 하나라도 1이면 1

^ (XOR) - 같은 값이면 0, 다른 값이면 1

~ (반전) 1은 0, 0은 1로 변경

비트 이동 연산자 (시프트 연산자)
<<, >>, >>>